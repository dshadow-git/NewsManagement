<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.training.mapper.JokeMapper">

    <insert id="save" parameterType="com.training.bean.JokeBean">
    insert into joke(joke_id, user_id, assort_id, title, post_time, content)
    values (#{jokeId}, #{userId}, #{assortId}, #{title}, #{postTime}, #{content})
    </insert>

    <update id="updateCoverById">
    update joke set cover_img = #{param2} where joke_id = #{param1}
    </update>

    <update id="updateSourceById">
        update joke set source = #{param2} where joke_id = #{param1}
    </update>

    <delete id="deleteById">
        delete from joke where joke_id = #{jokeId}
    </delete>

    <select id="selectAll" resultType="com.training.bean.JokeBean">
        select * from joke order by post_time desc
    </select>

    <select id="selectByAssortId" resultType="com.training.bean.JokeBean">
        select * from joke where assort_id = #{assortId} order by post_time desc;
    </select>

    <select id="selectBySearch" resultType="com.training.bean.JokeBean">
        select * from joke where title like #{search};
    </select>

    <select id="selectById" resultType="com.training.bean.JokeBean">
        select * from joke where joke_id = #{id};
    </select>

    <select id="selectByCollectionUserId" resultType="com.training.bean.JokeBean">
        select * from joke where joke_id in (select joke_id from collection where user_id = #{userId});
    </select>

</mapper>